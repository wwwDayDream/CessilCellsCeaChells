name: Release

on:
  release:
    types: [released, prereleased]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Setup .NET Env
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.203"

      - name: Run Cake Build Script
        run: |
          dotnet run --project build/Build.csproj --target Build

      - name: Upload Thunderstore Artifact
        uses: actions/upload-artifact@v4
        with:
          name: thunderstore-build
          path: dist/*.zip

      - name: Upload CessilCellsCeaChells NuPkg Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cccc-nupkg
          path: dist/cessil/*.nupkg

      - name: Upload CessilCellsCeaChells.Cli Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cli-build
          path: dist/cli/*.zip

      - name: Upload CessilCellsCeaChells.MSBuild NuPkg Artifact
        uses: actions/upload-artifact@v4
        with:
          name: msbuild-nupkg
          path: dist/msbuild/*.nupkg

  upload-release-artifacts:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all Artifacts
        uses: actions/download-artifact@v4

      - name: Upload Artifacts to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} thunderstore-build/*.zip cccc-nupkg/*.nupkg cli-build/*.zip msbuild-nupkg/*.nupkg

  deploy-nuget:
    name: Deploy to NuGet
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Download CCCC NuPkg Artifact
        uses: actions/download-artifact@v4
        with:
          name: cccc-nupkg
          path: dist/cessil

      - name: Download MSBuild NuPkg Artifact
        uses: actions/download-artifact@v4
        with:
          name: msbuild-nupkg
          path: dist/msbuild

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.203"

      - name: Publish to NuGet.org
        run: |
          dotnet nuget push dist/cessel/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
          dotnet nuget push dist/msbuild/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  deploy-thunderstore:
    if: ${{ github.event.release.prerelease == false }}
    name: Deploy to Thunderstore
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Thunderstore Artifact
        uses: actions/download-artifact@v4
        with:
          name: thunderstore-build
          path: dist

      - name: Restore Tools
        run: |
          dotnet tool restore

      - name: Publishing to Thunderstore
        env:
          TCLI_AUTH_TOKEN: ${{ secrets.THUNDERSTORE_API_TOKEN }}
        run: |
          dotnet tcli publish --config-path ts-assets/thunderstore.toml --file dist/*.zip
